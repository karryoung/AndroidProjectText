默认使用mqtttest包下的使用，test1包下的只是mqtt相同使用的另一种写法
使用说明：
1.在AndroidManinfest中添加权限
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    添加service
    <!-- Mqtt服务 -->
    <service android:name="org.eclipse.paho.android.service.MqttService" />

2.MQTTService是为了在后台运行服务并进行相关操作和数据回调
  String host = "tcp://10.105.32.16:1883";中“10.105.32.16”是测试地址，这里是本机ipv4的地址，
  “1883”是mqtt服务端口

  String userName = "admin";是用户名
  String passWord = "public";是密码
  String myTopic = "ForTest";是订阅的主题，跟服务器约定的字段
  String clientId = "androidId";是客户端标识，在实际开发中可用唯一标识码


  基本概念：
  topic：中文意思是“话题”。在MQTT中订阅了(subscribe)同一话题（topic）的客户端会同时收到消息推送。直接实现了“群聊”功能。
  clientId：客户身份唯一标识。
  qos：服务质量。
              qos为0：“至多一次”，消息发布完全依赖底层 TCP/IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。
              qos为1：“至少一次”，确保消息到达，但消息重复可能会发生。这一级别可用于如下情况，你需要获得每一条消息，并且消息重复发送对你的使用场景无影响。
              qos为2：“只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。
  retained：要保留最后的断开连接信息。
  MqttAndroidClient#subscribe()：订阅某个话题。
  MqttAndroidClient#publish()： 向某个话题发送消息，之后服务器会推送给所有订阅了此话题的客户。
  userName：连接到MQTT服务器的用户名。
  passWord ：连接到MQTT服务器的密码。