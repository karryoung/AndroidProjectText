apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin:'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.li.androidprojecttext"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    repositories {
        maven {
            url "https://repo.eclipse.org/content/repositories/paho-releases/"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    testImplementation 'junit:junit:4.12'
    implementation "android.arch.lifecycle:runtime:$rootProject.lifecycleRuntime"
    implementation "android.arch.lifecycle:extensions:$rootProject.lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.lifecycle"

    //EventBus库
    implementation 'org.greenrobot:eventbus:3.1.1'
    //Dagger库
    api 'com.google.dagger:dagger:2.25.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.25.2'
    api 'com.google.dagger:dagger-android:2.25.2'
    api 'com.google.dagger:dagger-android-support:2.25.2'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.25.2'

    //这个库是为了使用mqtt时后台运行通知消息的，可以后续视情况是否使用
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    //使用mqtt需要的库
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    //ButterKnife
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'

    //网络请求
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLogging"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitGson"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.rxjava2Adapter"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava"
    //GSON解析
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.gson"

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlin_version"
    implementation 'com.google.android.material:material:1.0.0'

    //AspectJ埋点
    implementation project(':aspectjlibrary')
    implementation 'org.aspectj:aspectjrt:1.8.9'

    //运行时权限
    implementation "pub.devrel:easypermissions:$rootProject.easypermissions"
    //leakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanary"
    //Logger
    implementation "com.orhanobut:logger:$rootProject.loggerVersion"
    //模糊透明 View
    implementation "com.github.mmin18:realtimeblurview:$rootProject.realtimeblurview"
    // 底部菜单
    implementation('com.flyco.tablayout:FlycoTabLayout_Lib:2.1.0@aar') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    //smartRefreshLayout 下拉刷新
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:$rootProject.SmartRefreshHeader"
    implementation "com.scwang.smartrefresh:SmartRefreshHeader:$rootProject.SmartRefreshHeader"
    //Banner
    implementation 'cn.bingoogolapple:bga-banner:2.2.4@aar'
    //图片加载
    //GlideOkHttp
    implementation(rootProject.ext.glideOkhttp) {
        exclude group: 'glide-parent'
    }
    implementation rootProject.ext.otherGlideLibs
    // glide注解处理器
    kapt rootProject.ext.annotationProcessorLibs
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger

android.applicationVariants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return
//    }

    JavaCompile javaCompile = variant.javaCompiler
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}
